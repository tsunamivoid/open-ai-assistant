[
  { "role": "assistant", "content": "Обнаружен цикл 'for'. Рекомендую добавить проверку условия выхода, чтобы избежать бесконечного выполнения. Например: 'for (let i = 0; i < array.length; i++)'." },
  { "role": "assistant", "content": "Функция не возвращает значение явно. Добавьте 'return', чтобы сделать поведение предсказемым." },
  { "role": "assistant", "content": "Переменная объявлена через 'var'. Рекомендую использовать 'let' или 'const' для лучшей области видимости." },
  { "role": "assistant", "content": "Код содержит console.log. Уберите его перед продакшеном или замените на логирование через библиотеку." },
  { "role": "assistant", "content": "Обнаружено изменение типа переменной (например, с числа на строку). Это может привести к ошибкам. Убедитесь, что типы согласованы." },
  { "role": "assistant", "content": "Функция слишком длинная (более 20 строк). Разделите её на несколько меньших для читаемости." },
  { "role": "assistant", "content": "Неиспользуемая переменная обнаружена. Удалите её, чтобы избежать путаницы." },
  { "role": "assistant", "content": "Рекомендую добавить комментарии к сложным участкам кода для упрощения поддержки." },
  { "role": "assistant", "content": "Обнаружено использование ==. Используйте=== для строгого сравнения типов." },
  { "role": "assistant", "content": "Массив обрабатывается через цикл. Рассмотрите использование методов вроде  map или forEach для большей выразительности." },
  { "role": "assistant", "content": "Параметры функции не задокументированы. Добавьте JSDoc, например: `/** @param {number} x */`." },
  { "role": "assistant", "content": "Код содержит вложенные условия. Рекомендую вынести логику в отдельную функцию для упрощения." },
  { "role": "assistant", "content": "Обнаружен `if` без `else`. Убедитесь, что все случаи обработаны." },
  { "role": "assistant", "content": "Строка кода слишком длинная (более 80 символов). Разбейте её для лучшей читаемости." },
  { "role": "assistant", "content": "Функция использует глобальную переменную. Передайте её как параметр для большей независимости." },
  { "role": "assistant", "content": "Обнаружено деление на переменную. Добавьте проверку на ноль, чтобы избежать ошибок." },
  { "role": "assistant", "content": "Код содержит дублирование. Выделите повторяющуюся логику в отдельную функцию." },
  { "role": "assistant", "content": "Рекомендую добавить обработку ошибок через `try/catch` для повышения надёжности." },
  { "role": "assistant", "content": "Обнаружено использование устаревшего метода. Рассмотрите современные альтернативы, такие как `Promise`." },
  { "role": "assistant", "content": "Ваш код выглядит хорошо!" }
]